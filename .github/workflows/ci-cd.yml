name: CI/CD Deployment

on:
  push:
    branches: [main, master]
  workflow_dispatch:

env:
  IMAGE_NAME: isdockero/onliver-room-manager
  IMAGE_TAG: latest
  REGISTRY: docker.io

jobs:
  # -------------------------- 1. СБОРКА --------------------------
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '21'
          cache: maven

      # выполняем Maven в /room_manager
      - name: Build (compile)
        working-directory: ./room_manager
        run: mvn -B package -DskipTests

  # -------------------------- 2. ТЕСТЫ ---------------------------
  test:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '21'
          cache: maven

      # выполняем Maven-тесты в /room_manager
      - name: Run unit tests
        working-directory: ./room_manager
        run: mvn -B test

  # -------------------------- 3. DOCKER --------------------------
  docker:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - uses: actions/checkout@v3
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push image
        uses: docker/build-push-action@v4
        with:
          context: ./room_manager
          file: ./room_manager/Dockerfile
          push: true
          tags: ${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}

  # -------------------------- 4. ДЕПЛОЙ --------------------------
  deploy:
    runs-on: ubuntu-latest
    needs: docker
    environment: production
    steps:
      # Остановка работающего стека и удаление старого образа
      - name: Stop running stack and remove old image
        uses: appleboy/ssh-action@v0.1.7
        with:
          host: ${{ vars.SERVER_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          password: ${{ secrets.SSH_PASSWORD }}
          script: |
            sudo docker login -u ${{ secrets.DOCKERHUB_USERNAME }} -p ${{ secrets.DOCKERHUB_TOKEN  }}
            echo "Stopping existing stack..."
            sudo docker stack rm onliver_room_manager_stack || true
            echo "Waiting for the stack to stop..."

      # Удаляем существующий deploy на сервере с использованием sudo
      - name: Remove existing deploy on remote host
        uses: appleboy/ssh-action@v0.1.7
        with:
          host: ${{ vars.SERVER_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          password: ${{ secrets.SSH_PASSWORD }}
          script: |
            echo "Удаляем старый deploy с использованием sudo..."
            sudo rm -rf deploy

      # Передача файла deploy на удалённый сервер
      - name: Copy 'deploy' Directory to Server
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ vars.SERVER_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          password: ${{ secrets.SSH_PASSWORD }}
          source: 'deploy/*'
          target: '~/'

      # Подключение по SSH, авторизация в Docker Hub на сервере и деплой нового стека
      - name: Deploy new stack
        uses: appleboy/ssh-action@v0.1.7
        with:
          host: ${{ vars.SERVER_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          password: ${{ secrets.SSH_PASSWORD }}
          script: |
            echo "Logging in to Docker Hub on remote host..."
            sudo docker login -u ${{ secrets.DOCKERHUB_USERNAME }} -p ${{ secrets.DOCKERHUB_TOKEN  }}
            echo "Deploying new stack..."
            ls
            sudo docker stack deploy --detach=true -c ~/deploy/docker-compose.yaml onliver_room_manager_stack

